<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.2.5</version>
  </parent>

  <groupId>com.amitesh</groupId>
  <artifactId>HexagonalArchitectureDemo</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <modules>
    <module>model</module>
    <module>application</module>
    <module>adapter</module>
    <module>bootstrap</module>
  </modules>

  <properties>
    <maven.compiler.release>21</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <lombok.version>1.18.32</lombok.version>
    <junit.jupiter.version>5.10.2</junit.jupiter.version>
    <assertj.version>3.25.3</assertj.version>
    <mockito.version>5.11.0</mockito.version>

    <maven.jar.plugin.version>3.4.1</maven.jar.plugin.version>
    <maven.compiler.plugin.version>3.13.0</maven.compiler.plugin.version>
    <maven.surefire.plugin.version>3.2.5</maven.surefire.plugin.version>

    <jakarta.ws.rs.api.version>4.0.0</jakarta.ws.rs.api.version>
    <rest.assured.version>5.4.0</rest.assured.version>
    <resteasy.jackson2.provider.version>6.2.8.Final</resteasy.jackson2.provider.version>
    <resteasy.undertow.version>6.2.8.Final</resteasy.undertow.version>
    <archunit.junit5.version>1.3.0</archunit.junit5.version>
    <jakarta.persistence.api.version>3.2.0-M2</jakarta.persistence.api.version>
    <hibernate.core.version>6.5.0.Final</hibernate.core.version>
    <hibernate.validator.version>8.0.1.Final</hibernate.validator.version>
    <jakarta.el.api.version>6.0.0</jakarta.el.api.version>
    <mysql.connector.j.version>8.4.0</mysql.connector.j.version>
    <testcontainers.mysql.version>1.19.7</testcontainers.mysql.version>

    <!-- Validations -->
    <maven.checkstyle.plugin.version>3.3.1</maven.checkstyle.plugin.version>
    <maven.checkstyle.version>10.16.0</maven.checkstyle.version>
    <spotless.maven.plugin.version>2.43.0</spotless.maven.plugin.version>
    <google.java.format.version>1.22.0</google.java.format.version>
    <pmd.version>7.1.0</pmd.version>
    <maven.pmd.plugin.version>3.22.0</maven.pmd.plugin.version>
    <spotbugs.maven.plugin.version>4.8.5.0</spotbugs.maven.plugin.version>
    <spotbugs.owasp.findsecbugs.plugin.version>1.13.0</spotbugs.owasp.findsecbugs.plugin.version>
    <spotbugs.version>4.8.5</spotbugs.version>
    <jacoco.maven.plugin.version>0.8.12</jacoco.maven.plugin.version>
  </properties>

  <!-- For auto generating methods like getter/setter. Provided scope (shared by all modules)  -->
  <dependencies>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- For testing. Test scope (shared by all modules) -->

    <!-- For JUnit5 -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- For Mocking -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- For Extending with MockitoExtension -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Assertj assertion library -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless.maven.plugin.version}</version>
        <configuration>
          <!-- https://github.com/diffplug/spotless/tree/main/plugin-maven#java -->
          <java>
            <includes>
              <include>src/main/java/**/*.java</include> <!-- Check application code -->
              <include>src/test/java/**/*.java</include> <!-- Check application tests code -->
            </includes>
            <removeUnusedImports/>
            <importOrder/> <!-- standard import order java|javax,org,com,com.diffplug,,\#com.diffplug,\# -->
            <googleJavaFormat>
              <!-- Latest version can be found here: https://github.com/google/google-java-format/releases -->
              <version>${google.java.format.version}</version>
              <style>GOOGLE</style>
            </googleJavaFormat>
            <lineEndings>UNIX</lineEndings>
          </java>
          <!-- It will fail the build so run it manually unless you are ready to fix -->
          <skip>true</skip>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>

      <!-- Analyze code coverage with JaCoCo -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.maven.plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <formats>XML</formats>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>code-inspection</id>
      <build>
        <plugins>

          <!-- Validate code style with Checkstyle -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <version>${maven.checkstyle.plugin.version}</version>
            <configuration>
              <configLocation>./rules/google_checks.xml</configLocation>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>com.puppycrawl.tools</groupId>
                <artifactId>checkstyle</artifactId>
                <!-- Version must be upgraded regularly for new set of rules -->
                <version>${maven.checkstyle.version}</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>

          <!-- Validate code issues with PMD -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <version>${maven.pmd.plugin.version}</version>
            <configuration>
              <!-- Optional custom ruleset -->
              <rulesets>
                <ruleset>./rules/pmd-ruleset-default.xml</ruleset>
              </rulesets>
              <failOnViolation>false</failOnViolation>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>net.sourceforge.pmd</groupId>
                <artifactId>pmd-core</artifactId>
                <version>${pmd.version}</version>
              </dependency>
              <dependency>
                <groupId>net.sourceforge.pmd</groupId>
                <artifactId>pmd-java</artifactId>
                <version>${pmd.version}</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <goals>
                  <goal>pmd</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>

          <!-- Validate code issues with SpotBugs -->
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <version>${spotbugs.maven.plugin.version}</version>
            <configuration>
              <failOnError>false</failOnError>
              <excludeFilterFile>./rules/spotbugs-exclude.xml</excludeFilterFile>
              <!-- To detect Security bugs -->
              <plugins>
                <plugin>
                  <groupId>com.h3xstream.findsecbugs</groupId>
                  <artifactId>findsecbugs-plugin</artifactId>
                  <version>${spotbugs.owasp.findsecbugs.plugin.version}</version>
                </plugin>
              </plugins>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>spotbugs</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>